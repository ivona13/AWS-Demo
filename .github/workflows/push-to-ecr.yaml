name: Push to ECR

on:
#  push:
#    branches: [ master ]
  workflow_dispatch:

env:
  VERSION_FILE: build.gradle
  VERSION_EXTRACT_PATTERN: version\s*=\s*'([^']+)'
  ECR_REPOSITORY: code-of-us

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest

    steps:

      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build

      - name: Generate versions
        uses: HardNorth/github-version-generate@v1.1.1
        with:
          version-source: file
          version-file: ${{ env.VERSION_FILE }}
          version-file-extraction-pattern: ${{ env.VERSION_EXTRACT_PATTERN }}

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ env.RELEASE_VERSION }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG . --platform linux/amd64
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG