AWSTemplateFormatVersion: '2010-09-09'
Resources:
  AWSEBLoadBalancer:
    Type: 'AWS::ElasticLoadBalancing::LoadBalancer'
    Properties:
      AvailabilityZones:
        - eu-north-1c
      ConnectionDrainingPolicy:
        Enabled: true
        Timeout: 20
      CrossZone: true
      HealthCheck:
        HealthyThreshold: '3'
        Interval: '10'
        Target:
          'Fn::Join':
            - ''
            - - HTTP
              - ':'
              - 80
              - '/'
        Timeout: '5'
        UnhealthyThreshold: '5'
      SecurityGroups:
        - Ref: AWSEBSecurityGroup
      Scheme: internal
      Listeners:
        - InstancePort: 80
          LoadBalancerPort: '80'
          Protocol: HTTP
        - InstancePort: 80
          LoadBalancerPort: '443'
          Protocol: HTTPS
          SSLCertificateId: arn:aws:acm:us-east-1:123456789012:certificate/your-certificate-arn
  sampleApplication:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      Description: AWS Elastic Beanstalk Sample Application
#  MySecurityGroup:
#    Type: 'AWS::EC2::SecurityGroup'
#    Properties:
#      GroupDescription: 'CF Test security group'
#      VpcId: vpc-7dd17514  # replace with your VPC ID
  sampleApplicationVersion:
    Type: AWS::ElasticBeanstalk::ApplicationVersion
    Properties:
      ApplicationName:
        Ref: sampleApplication
      Description: AWS ElasticBeanstalk Sample Application Version
      SourceBundle:
        S3Bucket: eb-test-samples
        S3Key: Dockerrun.aws.json
  sampleConfigurationTemplate:
    Type: AWS::ElasticBeanstalk::ConfigurationTemplate
    Properties:
      ApplicationName:
        Ref: sampleApplication
      Description: AWS ElasticBeanstalk Sample Configuration Template
      OptionSettings:
#       # load balancer
#        - Namespace: aws:elb:listener:443
#          OptionName: ListenerProtocol
#          Value: HTTPS
#        - Namespace: aws:elb:listener:443
#          OptionName: SSLCertificateId
#          Value: arn:aws:acm:eu-north-1:510513319638:certificate/01e9ac86-6fa9-4532-b33d-efd7944c62a2
#        - Namespace: aws:elb:listener:443
#          OptionName: InstancePort
#          Value: 80
#        - Namespace: aws:elb:listener:443
#          OptionName: InstanceProtocol
#          Value: HTTP
        - Namespace: aws:ec2:vpc
          OptionName: VPCId
          Value: vpc-7dd17514  # Specify your VPC ID here
        - Namespace: aws:ec2:vpc
          OptionName: Subnets
          Value: subnet-4d0ceb00
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: EnvironmentType
          Value: LoadBalanced
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: IamInstanceProfile
          Value: !Ref EBInstanceProfile
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: EC2KeyName
          Value: my_key
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: DATASOURCE_URL
          Value: jdbc:postgresql://private-rds.cbsvqjonjinb.eu-north-1.rds.amazonaws.com:5432/postgres
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: DATASOURCE_USERNAME
          Value: postgres
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: DATASOURCE_PASSWORD
          Value: postgres
      SolutionStackName: 64bit Amazon Linux 2 v3.5.7 running Docker

  sampleEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName:
        Ref: sampleApplication
      Description: AWS ElasticBeanstalk Sample Environment
      TemplateName:
        Ref: sampleConfigurationTemplate
      VersionLabel:
        Ref: sampleApplicationVersion

  EBInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Description: Beanstalk EC2 role
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly

  EBInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EBInstanceRole